<?php
return [
    'entries'                   => 'Entries',
//
    'register.new.warehouse'    => 'Register New Warehouse',
    'warehouseName'             => 'Warehouse Name',
    'warehouseCode'             => 'Warehouse Code',
    'warehousePhone'            => 'Warehouse Phone',
    'warehouseEmail'            => 'Warehouse Email',
    'warehouseAddress'          => 'Warehouse Address',
//
    'add.new.supplier'          => 'Add New Supplier',
    'add.supplier'              => 'Add Supplier',
    'supplierName'              => 'Supplier Name',
    'supplierCompany'           => 'Supplier Company Name',
    'supplierEmail'             => 'Supplier Email',
    'supplierPhone'             => 'Supplier Phone',
    'supplierTax'               => 'Supplier VAT',
    'supplierAddress'           => 'Supplier Address',
//
    'create.category'           => 'Create Category',
    'createProductCategory'     => 'Create Product Category',
    'categoryName'              => 'Category Name',
    'categoryCode'              => 'Code (Optional auto generate)',
    'categoryDescription'       => 'Category Description',
//
    'create.new.subcategory'    => 'Create New Subcategory',
    'parentCategory'            => 'Select Parent Category',
    'subcategoryName'           => 'Subcategory Unique Name',
    'subcategoryCode'           => 'Subcategory Code (Optional:Leave blank for auto generate)',
    'subcategoryDescription'    => 'Subcategory Description',
//
    'add.new.product'           => 'Add New Product',
    'add.product'               => 'Add Product',
    'productName'               => 'Product Unique Name',
    'productStatus'             => 'Status',
    'saleAble'                  => 'Active (sale-able)',
    'notSaleAble'               => 'Disabled',
    'discountable'              => 'Is Discountable',
    'allow'                     => 'Allow',
    'disallow'                  => 'Disallow',
    'expiryDate'                => 'Expiry Date',
    'manufacturingDate'         => 'Manufacturing Date',
    'productType'               => 'Product Type',
    'standardProduct'           => 'Standard',
    'productBarcode'            => 'Product Bar-code (Optional: Auto)',
    'barcodeSymbology'          => 'Bar-code Symbology',
    'quantityAlert'             => 'Quantity Alert',
    'productCategory'           => 'Select Product Category',
    'productSubcategory'        => 'Product Subcategory',
    'subcategoryNote'           => 'Select category, if category has subcategories ,will become active',
    'warehouse'                 => 'Warehouse',
    'productUnit'               => 'Product Unit',
    'productCost'               => 'Product Cost',
    'productPrice'              => 'Product Price',
    'taxIncluded'               => 'Tax included',
    'includedTaxMethod'         => 'Select Included Tax method',
    'taxTitle'                  => 'Enter price with included tax',
    'productSupplier'           => 'Select Product Supplier',
    'productSideEffects'        => 'Product Side Effects',
    'productDescription'        => 'Product Description',
    'productMoreOptions'        => 'Expend/Close More Options',
    'subcategoryTitle'          => 'select category,if category has subcategories ,will become active ',
    'codeTitle'                 => 'Leave blank system will generate automatically',
//
    'define.new.tax.method'     => 'Define New Tax Method',
    'define.tax.method'         => 'Define Tax Method',
    'taxTitle'                  => 'Tax Title',
    'shortCode'                 => 'Short Code',
    'taxRate'                   => 'Tax Rate (0 to 100)',
//
    'add.new.expense'           => 'Add New Expense',
    'expense.voucher'           => 'Expense Voucher',
    'expenseAmount'             => 'Expense Amount',
    'expenseType'               => 'Expense Type',
    'expenseDetail'             => 'Expense Detail',
    'addExpense'                => 'Add Expense',
//
    'add.new.customer'          => 'Add New Customer',
    'add.customer'              => 'Add Customer',
    'customerName'              => 'Customer Name',
    'customerEmail'             => 'Customer Email',
    'customerPhone'             => 'Customer Phone',
    'customerTaxID'             => 'Customer Tax ID (VAT)',
    'customerAddress'           => 'Customer Address',
//
    'new.purchase.order'        => 'New Purchase Order',
    'make.Purchase'             => 'Make Purchase',
    'bySupplierPurchase'        => 'By Supplier Purchase',
    'selectSupplier'            => 'Select Product Supplier',
    'purchaseNote'              => 'Put 0 quantity to remove product from list',
    'selectDate'                => 'Select Date',
    'referenceNo'               => 'Reference No',
    'purchaseItems'             => 'Purchase items',
    'productName'               => 'Product Name',
    'inStack'                   => 'In Stock',
    'cost'                      => 'Cost',
    'newQty'                    => 'New Qty',
    'subTotal'                  => 'Sub Total',
    'totalPurchasedItem'        => 'Total Purchased Item(s)',
    'totalCost'                 => 'Total Cost',
    'taxMethod'                 => 'Tax Method',
    'discount'                  => 'Discount (0-99)',
    'shipping'                  => 'Shipping',
    'purchaseOrderNote'         => 'Purchase Order Note',
    'includedTax'               => 'Included Tax',
    'discountAmount'            => 'Discount',
    'pay'                       => 'Pay',
    'additionalForShipping'     => 'Additional for Shipping',
//
    'paymentGatewayTitle' => 'Payment Gateway Title',
    'shortCodePG' => 'P.G Short Code',
    'defaultStatus' => 'Select Default Status',
    'paymentDescription' => 'Short Detail',
    'definePaymentMethod' => 'Define Payment Method',
];
